name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: |
        echo "Running pre-release tests..."
        npm audit --audit-level moderate || true
        timeout 30s npm start || true
    
    - name: Build release
      run: |
        echo "Building release package..."
        # Create release package
        tar -czf healthcare-portal-${{ github.ref_name }}.tar.gz \
          --exclude=node_modules \
          --exclude=.git \
          --exclude=.github \
          --exclude=*.log \
          --exclude=.env \
          --exclude=.okta.env \
          .
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## Healthcare Portal Release ${{ github.ref_name }}
          
          ### Changes
          - Updated healthcare portal functionality
          - Enhanced security features
          - Improved user interface
          
          ### Installation
          1. Extract the release package
          2. Run `npm install`
          3. Configure environment variables
          4. Start the application with `npm start`
          
          ### Security Notes
          - Ensure all environment variables are properly configured
          - Review security audit results before deployment
        draft: false
        prerelease: false
    
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./healthcare-portal-${{ github.ref_name }}.tar.gz
        asset_name: healthcare-portal-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip

  notify:
    runs-on: ubuntu-latest
    needs: release
    
    steps:
    - name: Notify team
      run: |
        echo "Release ${{ github.ref_name }} has been created!"
        # Add notification commands here (Slack, email, etc.)
        # Example:
        # curl -X POST -H 'Content-type: application/json' \
        #   --data '{"text":"New release: ${{ github.ref_name }}"}' \
        #   ${{ secrets.SLACK_WEBHOOK_URL }} 