name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    environment: staging
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level moderate
      continue-on-error: true
    
    - name: Build application
      run: |
        # Create production build
        npm ci --production
        # Create deployment package
        tar -czf healthcare-portal-staging.tar.gz \
          --exclude=node_modules \
          --exclude=.git \
          --exclude=.github \
          --exclude=*.log \
          .
    
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        # Add your staging deployment commands here
        # Example: scp, rsync, or cloud deployment commands
        echo "Staging deployment completed"
    
    - name: Health check staging
      run: |
        echo "Performing health check on staging..."
        # Add health check commands here
        # Example: curl -f http://staging-url/health || exit 1

  deploy-production:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    environment: production
    needs: deploy-staging
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level moderate
      continue-on-error: true
    
    - name: Build application
      run: |
        # Create production build
        npm ci --production
        # Create deployment package
        tar -czf healthcare-portal-production.tar.gz \
          --exclude=node_modules \
          --exclude=.git \
          --exclude=.github \
          --exclude=*.log \
          .
    
    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        # Add your production deployment commands here
        # Example: scp, rsync, or cloud deployment commands
        echo "Production deployment completed"
    
    - name: Health check production
      run: |
        echo "Performing health check on production..."
        # Add health check commands here
        # Example: curl -f http://production-url/health || exit 1
    
    - name: Notify deployment
      run: |
        echo "Production deployment completed successfully!"
        # Add notification commands here (Slack, email, etc.)

  rollback:
    runs-on: ubuntu-latest
    if: failure()
    needs: [deploy-staging, deploy-production]
    
    steps:
    - name: Rollback deployment
      run: |
        echo "Deployment failed, initiating rollback..."
        # Add rollback commands here
        echo "Rollback completed" 