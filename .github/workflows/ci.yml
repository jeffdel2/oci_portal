name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level moderate
    
    - name: Check for vulnerabilities
      run: npm audit --audit-level high
      continue-on-error: true
    
    - name: Run linting
      run: |
        # Check for common security issues
        npm audit --audit-level moderate || true
        # Check for outdated packages
        npm outdated || true
    
    - name: Test application startup
      run: |
        # Test if the app can start without errors
        timeout 30s npm start || true
    
    - name: Check environment variables
      run: |
        # Check if required env vars are documented
        if [ ! -f ".env.example" ]; then
          echo "Warning: .env.example file not found"
        fi
    
    - name: Validate package.json
      run: |
        # Validate package.json syntax
        node -e "JSON.parse(require('fs').readFileSync('package.json', 'utf8'))"
    
    - name: Check for sensitive files
      run: |
        # Check for sensitive files that shouldn't be committed
        if [ -f ".okta.env" ]; then
          echo "Warning: .okta.env file found - ensure it's in .gitignore"
        fi
        if [ -f ".env" ]; then
          echo "Warning: .env file found - ensure it's in .gitignore"
        fi

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security scan
      run: |
        # Install security tools
        npm install -g audit-ci
        # Run security audit
        audit-ci --moderate
        continue-on-error: true
    
    - name: Check for secrets
      run: |
        # Basic check for potential secrets in code
        if grep -r "password\|secret\|key\|token" . --exclude-dir=node_modules --exclude-dir=.git; then
          echo "Warning: Potential secrets found in code"
        fi

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build check
      run: |
        # Verify all dependencies can be installed
        npm ci --production
        # Check if the app can be started
        timeout 10s npm start || true
    
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          node_modules/
          package.json
          package-lock.json
        retention-days: 7 